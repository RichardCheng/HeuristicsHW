function [result, violation] = bump3Q(x, fmin)

leng = length(x); 
prod = 1; 
for i = 1:leng
    if (x(i) < 0 || x(i) > 10)
        result = calcViolation(x, fmin); 
        violation = true; 
        return;
    end
    prod = prod * x(i);
end 

if prod < 0.75
    result = calcViolation(x,fmin);
    violation = true;
    return;
end

num1 = 0; 
num2 = 2;
denum = 0; 

for i = 1:leng
    num1 = num1 + (Cos(x(i)))^4;
    num2 = num2 * (Cos(x(i)))^2;
    denum = denum + i * (x(i))^2;
end

result = Abs((num1-num2)/Sqrt(denum)); 
violation = false; 

function violationMeasure = calcViolation(x, fmin)

leng = length(x); 
prod = 1; 
constraint = 0;
%TODO: need to normalize...how?
for i = 1:leng
    if (10-x(i) < 0)
        constraint = constraint - (10-x(i));
    end
    if (x(i) < 0)
        constraint = constraint - x(i);
    end
    prod = prod * 
end



























